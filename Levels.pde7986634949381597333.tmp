class Level {

  void DrawLevel1() {
    background(140, 200, 220);
    p.display();
    p.behavior();
    p.control();
    playeranimation.draw();

    roomgoal.DrawRoomwarp(width-20, 92, 20, 150);
    item.DrawItem(100, 200);

    //platform 1
    for (int SolidX = 0; SolidX < 160; SolidX += 32) 
    {
      for (int SolidY = 672; SolidY < height; SolidY += 32)
      {
        if (SolidX == 128 && SolidY == 672)
        {
          o.DrawImage(SolidX, SolidY, 3);
        } else if (SolidY == 672)
        {
          o.DrawImage(SolidX, SolidY, 1);
        } else if (SolidX == 128)
        {
          o.DrawImage(SolidX, SolidY, 6);
        } else
        {
          o.DrawImage(SolidX, SolidY, 0);
        }
      }
    }    
    o.DrawSystems(0, 672, 160, 128); 

    //platform 2
    for (int SolidX = 332; SolidX < 460; SolidX += 32) 
    {
      for (int SolidY = 544; SolidY < height; SolidY += 32)
      {
        if (SolidX == 332 && SolidY == 544)
        {
          o.DrawImage(SolidX, SolidY, 2);
        } else if (SolidX == 428 && SolidY == 544)
        {
          o.DrawImage(SolidX, SolidY, 3);
        } else if (SolidY == 544)
        {
          o.DrawImage(SolidX, SolidY, 1);
        } else if (SolidX == 332)
        {
          o.DrawImage(SolidX, SolidY, 5);
        } else if (SolidX == 428)
        {
          o.DrawImage(SolidX, SolidY, 6);
        } else
        {
          o.DrawImage(SolidX, SolidY, 0);
        }
      }
    }
    o.DrawSystems(332, 544, 128, 600);

    //platform 3
    for (int i = 0; i < 128; i += 32) {
      o.DrawImage(i + 364, 300, 1);
    }
    o.DrawSystems(364, 300, 128, 32);

    //platform 4
    for (int SolidX = 608; SolidX < 704; SolidX += 32) 
    {
      for (int SolidY = 448; SolidY < height; SolidY += 32)
      {
        if (SolidX == 608 && SolidY == 448)
        {
          o.DrawImage(SolidX, SolidY, 2);
        } else if (SolidX == 608)
        {
          o.DrawImage(SolidX, SolidY, 5);
        } else if (SolidY == 448)
        {
          o.DrawImage(SolidX, SolidY, 1);
        } else
        {
          o.DrawImage(SolidX, SolidY, 0);
        }
      }
    }
    o.DrawSystems(608, 448, 96, 500);

    //platfrom 5
    for (int SolidX = 704; SolidX < 832; SolidX += 32) 
    {
      for (int SolidY = 224; SolidY < height; SolidY += 32)
      {
        if (SolidX == 704 && SolidY == 224)
        {
          o.DrawImage(SolidX, SolidY, 2);
        } else if (SolidX == 800 && SolidY == 224)
        {
          o.DrawImage(SolidX, SolidY, 3);
        } else if (SolidY == 224)
        {
          o.DrawImage(SolidX, SolidY, 1);
        } else if (SolidX == 800)
        {
          o.DrawImage(SolidX, SolidY, 6);
        } else if (SolidX == 704 && SolidY < 448)
        {
          o.DrawImage(SolidX, SolidY, 5);
        } else
        {
          o.DrawImage(SolidX, SolidY, 0);
        }
      }
    }
    o.DrawSystems(704, 223, 128, 800);

    //platfrom 6
    for (int SolidX = 992; SolidX < width; SolidX += 32) 
    {
      for (int SolidY = 224; SolidY < height; SolidY += 32)
      {
        if (SolidX == 992 && SolidY == 224)
        {
          o.DrawImage(SolidX, SolidY, 2);
        } else if (SolidY == 224)
        {
          o.DrawImage(SolidX, SolidY, 1);
        } else if (SolidX == 992)
        {
          o.DrawImage(SolidX, SolidY, 5);
        } else
        {
          o.DrawImage(SolidX, SolidY, 0);
        }
      }
    }
    o.DrawSystems(992, 224, 400, 800);

    //wall 1
    for (int ObjectY = 0; ObjectY < 672; ObjectY += 32)
    {
      o.DrawImage(0, ObjectY, 20);
    }
    o.DrawSystems(0, 0, 32, height);

    //wall 2
    for (int ObjectY = 0; ObjectY < 100; ObjectY += 32)
    {
      o.DrawImage(width-32, ObjectY, 21);
    }
    o.DrawSystems(width-32, 0, 32, 128); //wall 2
    signs.moveSign(5, 680, 150, 120);
    signs.jumpSign(335, 550, 120, 90);
  }

  // LEVEL 2 FUNCITON --------------------------------------------------------------------------------------------------------------------------------------------
  void DrawLevel2() {
    background(140, 200, 220);
    p.display();
    p.behavior();
    p.control();
    playeranimation.draw();

    //wall 1
    for (int ObjectY = 0; ObjectY < 800; ObjectY += 32)
    {
      o.DrawImage(0, ObjectY, 20);
    }
    o.DrawSystems(0, 0, 32, height);
    
    //wall 2
    for (int ObjectY = 0; ObjectY < 800; ObjectY += 32) {
      o.DrawImage(1268, ObjectY, 20);
    }
    o.DrawSystems(1268, 0, 32, height);

    //platform1
    for (int i = 0; i < 160; i += 32) {
      o.DrawImage(i+32, 700, 1);
    }
    o.DrawSystems(32, 700, 160, 32);

    //platform 2
    for (int i = 0; i < 192; i += 32) {
      o.DrawImage(i +620, 701, 1);
    }
    o.DrawSystems(620, 701, 192, 32);

    //platform 3
    for (int i = 0; i < 192; i += 32) {
      o.DrawImage(i +950, 550, 1);
    }
    o.DrawSystems(950, 550, 192, 32);

    //solid walls achter de walljumps

    for (int i = 0; i < 500; i += 32) {
      o.DrawImage(168, i+20, 20);
    }
    o.DrawSystems(168, 20, 32, 500);

    for (int i = 0; i < 576; i += 32) {
      o.DrawImage(420, i+150, 20);
    }
    o.DrawSystems(420, 150, 32, 576);

    for (int i = 0; i < 400; i += 32) {
      o.DrawImage(672, i+20, 20);
    }
    o.DrawSystems(672, 20, 32, 400);

    //set 1 aan walls
    for (int SolidY = 150; SolidY < 726; SolidY += 32) 
    {
      if(SolidY == 150)
      {
        j.WallVisual(410, SolidY, 1);
      }
      else if(SolidY == 694)
      {
        j.WallVisual(410, SolidY, 2);
      }
      else
      {
        j.WallVisual(410, SolidY, 0);
      }
    }
    j.drawRWall(659, 20, 20, 416);
    j.drawRWall(410, 150, 20, 576);
    
    for (int SolidY = 20; SolidY < 532; SolidY += 32) 
    {
      if(SolidY == 20)
      {
        j.WallVisual(190, SolidY, 3);
      }
      else if(SolidY == 500)
      {
        j.WallVisual(190, SolidY, 4);
      }
      else
      {
        j.WallVisual(190, SolidY, 0);
      }
    }
    j.drawLWall(190, 20, 20, 512);

    //set 2 aan walls
    for (int SolidY = 150; SolidY < 726; SolidY += 32) 
    {
      if(SolidY == 150)
      {
        j.WallVisual(445, SolidY, 3);
      }
      else if(SolidY == 694)
      {
        j.WallVisual(445, SolidY, 4);
      }
      else
      {
        j.WallVisual(445, SolidY, 0);
      }
    }
    j.drawLWall(445, 150, 20, 576);
    
    for (int SolidY = 20; SolidY < 436; SolidY += 32) 
    {
      if(SolidY == 20)
      {
        j.WallVisual(659, SolidY, 1);
      }
      else if(SolidY == 404)
      {
        j.WallVisual(659, SolidY, 2);
      }
      else
      {
        j.WallVisual(659, SolidY, 0);
      }
    }
    
    //platform6
    for (int i = 0; i < 96; i += 32) {
      o.DrawImage(i+1172, 200, 1);
    }
    o.DrawSystems(1172, 200, 96, 32);
roomgoal.DrawRoomwarp(1248, 140, 20, 60);
    

    //overige assets
    
    item.DrawItem(612, 70);
    signs.walljumpSign(35, 450, 120, 90);
  }

 // LEVEL 3 FUNCTION --------------------------------------------------------------------------------------------------------------------------------------------

  void DrawLevel3() {
    background(140, 200, 220);
    p.display();
    p.behavior();
    p.control();
    playeranimation.draw();

    //wall 1
    for (int ObjectY = 0; ObjectY < 800; ObjectY += 32) {
      o.DrawImage(0, ObjectY, 20);
    }
    o.DrawSystems(0, 0, 32, height);

    //wall 2
    for (int ObjectY = 0; ObjectY < 800; ObjectY += 32) {
      o.DrawImage(1268, ObjectY, 20);
    }
    o.DrawSystems(1268, 0, 32, height);

    //platform1
    for (int i = 0; i < 128; i += 32) {
      o.DrawImage(i+31, 700, 1);
    }
    o.DrawSystems(31, 700, 128, 32);

    //platform2
    for (int i = 0; i < 32; i += 32) {
      o.DrawImage(i+31, 301, 1);
    }
    o.DrawSystems(31, 301, 32, 32);

    //platform3
    for (int i = 0; i < 160; i += 32) {
      o.DrawImage(i+500, 601, 1);
    }
    o.DrawSystems(500, 601, 160, 32);

    //platform4
    for (int i = 0; i < 96; i += 32) {
      o.DrawImage(i+800, 400, 1);
    }
    o.DrawSystems(800, 400, 96, 32);

    //platform5
    for (int i = 0; i < 32; i += 32) {
      o.DrawImage(i+1000, 300, 1);
    }
    o.DrawSystems(1000, 300, 32, 32);

    //platform6
    for (int i = 0; i < 96; i += 32) {
      o.DrawImage(i+1172, 200, 1);
    }
    o.DrawSystems(1172, 200, 96, 32);

    g.grapplepoint(400, 350);
    item.DrawItem(32, 265);
    roomgoal.DrawRoomwarp(1248, 140, 20, 60);
    signs.grappleSign(35, 450, 120, 90);
  }

  // LEVEL 4 FUNCTION -------------------------------------------------------------------------------------------------------------------------------------------
  void DrawLevel4()
  {
    background(140, 200, 220);
    p.display();
    p.behavior();
    p.control();
    playeranimation.draw();
    roomgoal.DrawRoomwarp(width-20, 0, 20, 160);

    //platform 1
    for (int ObjectX = 0; ObjectX < 224; ObjectX += 32)
    {
      for (int ObjectY = height-160; ObjectY < height; ObjectY += 32)
      {
        o.DrawImage(ObjectX, ObjectY, 0);
      }
    }
    o.DrawSystems(0, height-160, 224, 160);

    //platform 2
    for (int ObjectX = width-320; ObjectX < width; ObjectX += 32)
    {
      for (int ObjectY = 160; ObjectY < height; ObjectY += 32)
      {
        o.DrawImage(ObjectX, ObjectY, 0);
      }
    }
    o.DrawSystems(width-320, 160, 320, 750);

    //platform 3
    for (int ObjectX = 668; ObjectX < 732; ObjectX += 32)
    {
      for (int ObjectY = 0; ObjectY < 412; ObjectY += 32)
      {
        o.DrawImage(ObjectX, ObjectY, 0);
      }
    }
    o.DrawSystems(668, 0, 64, 412);

    //wall 1
    for (int ObjectY = 0; ObjectY < height-160; ObjectY += 32)
    {
      o.DrawImage(0, ObjectY, 20);
    }
    o.DrawSystems(0, 0, 32, height);

    for (int SolidY = 160; SolidY < 860; SolidY += 32) 
    {
      if(SolidY == 160)
      {
        j.WallVisual(970, SolidY, 1);
      }
      else if(SolidY == 828)
      {
        j.WallVisual(970, SolidY, 2);
      }
      else
      {
        j.WallVisual(970, SolidY, 0);
      }
    }
    j.drawRWall(970, 160, 20, 700);
    
    for (int SolidY = 0; SolidY < 416; SolidY += 32) 
    {
      if(SolidY == 384)
      {
        j.WallVisual(727, SolidY, 4);
      }
      else
      {
        j.WallVisual(727, SolidY, 0);
      }
    }
    j.drawLWall(727, 0, 20, 416);
    
    //ds.drawSpike(716, 396, 32, 32);
    g.grapplepoint(500, 550);
    item.DrawItem(width-370, height-50);
  }

  // LEVEL 5 FUNCTION --------------------------------------------------------------------------------------------------------------------------------------------

  void DrawLevel5()
  {
    background(140, 200, 220);
    p.display();
    p.behavior();
    p.control();
    playeranimation.draw();
    levelend.DrawLevelEnd(50, 50);
    s.drawSpike(410, 265, 270, 30); //spike 2
    s.drawSpike(width-60, 630, 50, 50); //spike 3
    s.drawSpike(width-60, 230, 50, 50); //spike 4
    s.drawSpike(width-320, 440, 50, 50); //spike 5
    item.DrawItem(400, 400);
    g.grapplepoint(600, 500);

    //platform 1
    for (int ObjectX = 0; ObjectX < 224; ObjectX += 32)
    {
      for (int ObjectY = height-160; ObjectY < height; ObjectY += 32)
      {
        if (ObjectX == 192 && ObjectY == height-160)
        {
          o.DrawImage(ObjectX, ObjectY, 3);
        } else if (ObjectX == 192)
        {
          o.DrawImage(ObjectX, ObjectY, 6);
        } else if (ObjectY == height -160)
        {
          o.DrawImage(ObjectX, ObjectY, 1);
        } else
        {
          o.DrawImage(ObjectX, ObjectY, 0);
        }
      }
    }
    o.DrawSystems(0, height-160, 224, 160);

    //platform 2
    for (int ObjectX = width-416; ObjectX < width; ObjectX += 32)
    {
      for (int ObjectY = height-128; ObjectY < height; ObjectY += 32)
      {
        if (ObjectX == width-416  && ObjectY == height -128)
        {
          o.DrawImage(ObjectX, ObjectY, 2);
        } else if (ObjectX == width-416)
        {
          o.DrawImage(ObjectX, ObjectY, 5);
        } else if (ObjectY == height-128)
        {
          o.DrawImage(ObjectX, ObjectY, 1);
        } else
        {
          o.DrawImage(ObjectX, ObjectY, 0);
        }
      }
    }
    o.DrawSystems(width-416, height-128, 384, 160);

    //platform 3
    for (int ObjectY = 228; ObjectY < 548; ObjectY += 32)
    {
      if (ObjectY == 228)
      {
        o.DrawImage(960, ObjectY, 4);
      } 
      else if (ObjectY >= 320 && ObjectY < 516)
      {
        o.DrawImage(960, ObjectY, 8);
      } 
      else if (ObjectY >= 516)
      {
        o.DrawImage(960, ObjectY, 9);
      } 
      else
      {
        o.DrawImage(960, ObjectY, 6);
      }
    } 
    o.DrawSystems(960, 228, 32, 320);

    //platform 4
    for (int ObjectX = 224; ObjectX < 960; ObjectX += 32)
    {
      for (int ObjectY = 260; ObjectY < 324; ObjectY += 32)
      {
        if (ObjectX == 384 && ObjectY == 260)
        {
          o.DrawImage(ObjectX, ObjectY, 3);
        } else if (ObjectX == 640 && ObjectY == 260)
        {
          o.DrawImage(ObjectX, ObjectY, 2);
        } else if (ObjectX >= 416 && ObjectX <= 640 && ObjectY == 260)
        {
        } else if (ObjectX >= 416 && ObjectX <= 618 && ObjectY == 292)
        {
          o.DrawImage(ObjectX, ObjectY, 7);
        } else if (ObjectY == 292)
        {
          o.DrawImage(ObjectX, ObjectY, 10);
        } else if (ObjectY == 260)
        {
          o.DrawImage(ObjectX, ObjectY, 1);
        } else
        {
          o.DrawImage(ObjectX, ObjectY, 0);
        }
      }
    }
    o.DrawSystems(32, 259, 384, 32);
    o.DrawSystems(650, 260, 334, 32);
    o.DrawSystems(32, 291, 828, 32);

    //platform 5
    for (int ObjectX = 0; ObjectX < 224; ObjectX += 32)
    {
      for (int ObjectY = 164; ObjectY < 324; ObjectY += 32)
      {
        if (ObjectY == 164 && ObjectX == 192)
        {
          o.DrawImage(ObjectX, ObjectY, 3);
        } else if (ObjectX == 192 && ObjectY <= 228)
        {
          o.DrawImage(ObjectX, ObjectY, 6);
        } else if (ObjectY == 164)
        {
          o.DrawImage(ObjectX, ObjectY, 1);
        } else if (ObjectY == 292)
        {
          o.DrawImage(ObjectX, ObjectY, 10);
        } else
        {
          o.DrawImage(ObjectX, ObjectY, 0);
        }
      }
    }
    o.DrawSystems(32, 164, 192, 160);

    //wall 1
    for (int ObjectY = 0; ObjectY < height-160; ObjectY += 32)
    {
      o.DrawImage(0, ObjectY, 20);
    }
    o.DrawSystems(0, 0, 32, height);

    //wall 2
    for (int ObjectY = 0; ObjectY < height-128; ObjectY += 32)
    {
      o.DrawImage(width-32, ObjectY, 21);
    }
    o.DrawSystems(width-32, 0, 32, height); //wall 2
    
    for (int SolidY = 96; SolidY < 672; SolidY += 32) 
    {
      if(SolidY ==96)
      {
        j.WallVisual(width-40, SolidY, 1);
      }
      else
      {
        j.WallVisual(width-40, SolidY, 0);
      }
    }
    j.drawRWall(width-40, 96, 20, 582);
    
    for (int SolidY = 228; SolidY < 548; SolidY += 32) 
    {
      if(SolidY == 228)
      {
        j.WallVisual(980, SolidY, 3);
      }
      else if(SolidY == 516)
      {
        j.WallVisual(980, SolidY, 4);
      }
      else
      {
        j.WallVisual(980, SolidY, 0);
      }
    }
    j.drawLWall(980, 228, 20, 320);
  }
}
